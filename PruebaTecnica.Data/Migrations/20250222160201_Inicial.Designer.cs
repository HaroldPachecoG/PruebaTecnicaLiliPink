// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PruebaTecnica.Data;

#nullable disable

namespace PruebaTecnica.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250222160201_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecnica.Logica.Models.Busqueda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaBusqueda")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NombreBuscado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Resultado")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Busquedas");
                });

            modelBuilder.Entity("PruebaTecnica.Logica.Models.Cliente", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Cedula");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PruebaTecnica.Logica.Models.Factura", b =>
                {
                    b.Property<int>("NoFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NoFactura"));

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductoId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NoFactura");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("PruebaTecnica.Logica.Models.Producto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PruebaTecnica.Logica.Models.Factura", b =>
                {
                    b.HasOne("PruebaTecnica.Logica.Models.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PruebaTecnica.Logica.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PruebaTecnica.Logica.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");
                });
#pragma warning restore 612, 618
        }
    }
}
